TODO:
- Setup gwt project using maven: 'use web toolkit'
- Setup gwt compilation prefs: ignore 'incorrect build output directory' and 'missing sdk' errors
- Rename SavingService to TabService
- Create failing tab goblin integration test (http://goo.gl/1jt4l)
- Fix integration test
- Use configuration file for berkeley db parameters

DONE:
- Test using eclipse google developer plugin for gwt hosted mode (http://goo.gl/c9ECC)
- Test eclipse-shell for scripting gwt launch configurations (http://goo.gl/o24Hv)
- Test sikuli for scripting gwt launch configurations (http://sikuli.org/)
- Implement generic dao put
- Refactor dao and make its implementation generic
- Search for continuous integration service (http://goo.gl/yKcl9)
- Implement generic dao read
- Read bdb dpl quick start 1/4 (http://goo.gl/72jBx)
- Read bdb dpl quick start 2/4 (http://goo.gl/el7Dd)
- Read bdb dpl quick start 3/4 (http://goo.gl/TjrTo)
- Read bdb dpl quick start 4/4 (http://goo.gl/7CMYZ)
- Print bdb direct persistence layer quick start (see http://goo.gl/mqcgD)
- Setup berkeley db maven dependency (see http://goo.gl/1mUWf)
- Refactor after implementing load & save view
- Implement tablature load & save view (only 1 tab possible)
- Update test: mock the way SavingService answers (success with a result or failure with an exception)
- Implement gwt async loading/saving service with generic dao